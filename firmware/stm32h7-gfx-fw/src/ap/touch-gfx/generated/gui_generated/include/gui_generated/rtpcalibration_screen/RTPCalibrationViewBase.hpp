/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef RTPCALIBRATIONVIEWBASE_HPP
#define RTPCALIBRATIONVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/rtpcalibration_screen/RTPCalibrationPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class RTPCalibrationViewBase : public touchgfx::View<RTPCalibrationPresenter>
{
public:
    RTPCalibrationViewBase();
    virtual ~RTPCalibrationViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void calibrationPointPressed(uint8_t value)
    {
        // Override and implement this function in Screen1
    }
    

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ClickListener< touchgfx::Box > Background;
    touchgfx::Image TouchPoint1;
    touchgfx::Image TouchPoint2;
    touchgfx::Image TouchPoint3;
    touchgfx::Image TouchPoint4;
    touchgfx::Image TouchPoint5;
    touchgfx::ButtonWithLabel CalibrationCancelBtn;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextAreaWithOneWildcard textArea1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<RTPCalibrationViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // RTPCALIBRATIONVIEWBASE_HPP
